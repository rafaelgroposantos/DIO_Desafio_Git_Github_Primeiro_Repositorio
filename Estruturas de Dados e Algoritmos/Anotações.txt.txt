CURSO DE .NET DEVELOPER

Aprenda o que são estruturas de Dados e ALGORITMOS

O QUE É Estrutura DE DADOS:

Nossa memorias são volateis

Estrutura de dados é uma estrutura organizada de dados de memorias
de um computador ou de qualquer dispositivo de armazenamento, de forma
que os dados possam ser utilizados de forma correta.

Essas estruturas encontram muitas aplicações no desenvolvimento
de sistemas, sendo que algumas são altamente especializadas
e utilizadas em tarefas especificas.

Usando as estruturas adequadas atraves de algoritmos
podemos trabalhar com uma grande quantidade de dados, como aplicações
em banco de dados ou serviços de buscas.

Algoritmos:

um algoritmo é um conjuntos de instuções estruturadas e ordenadas,
seu objetivo é realizaruma tarefa ou operação especificas.

Os algoritmo são utilizados para manipular dados de varias
formas, como por exemplo: inserir,excluir, procurar e ordenar dados.

Em uma estrutura de dados devemos saber como realizar um determinado
conjuntos de operações basicas, como por exemplo:

* inserir dados
* excluir dados
* localizar elemento
* percorrer todos os itens contiuintes da estrutura para visualização
* classicarm que se resume colocar os itens de dados em uma determinada
ordem (numerica,alfabetica, etc.)

Principais estruturas de dados

* Vetores e Matrizes
* Registros
* Lista
* Pilha
* Fila
* Arvore
* tabela Hash
* Grafos

Vetores e Matrizes ou Array

Vetores e Array.
Teoria: Vetores e matrizes ou arrays são estruturas simples que 
podem auxiliar quando hámuitas variaves do mesmo tipo em um algoritmo.

Vetor ou Array uni-dimensional é uma variavel que se armazena varias
variaveis do mesmo tipo.

O vetor é uma estrutura de dados indexada, que pode armazenar uma
determinada quantidade de valores do mesmo tipo.

Matriz.

Matriz ou arrays multi-dimensional é um vetor de vetores,
Uma matriz é um vetor que possui duas ou mais dimensões.


Registros

Estrutura Registros

Um Registro é uma estrutura que fornece uma formato especializado para
armazenar informações em memoria.

O registro são diferente dos vetores e matrizes, enquanto os arrays
nos permite armazenar varios dados de um unico tipo de dados o recurso
Registro nos permite armazenar mais de um tipo de dado.

Toda a estrutura de registro tem um nome (ex:livro), e seus campos
podem ser acessados por meio de uso operador ponto (.). Por exemplo
para acessar o preço de uma livro, poderiamos utilizar a seguinte
declaração:

livro.preco


Lista 

Estrutura de dados do tipo lista, armazena dados de um determinado
tipo em ordem especificas.
A diferença entre lista e arrays pe a de qye as lista possuem tamanho
ajustavel, enquanto arrays possuem tamanho fixo.

Existe dois tipo de lista:

* Ligadas
* Duplamente Ligadas

Lista Ligada

Na estrutura do tipo lista existem os nós onde cada um dos nós conhece
o valor que está armazenado em seus interior além de conhecer os
elemento posterior a ele: por isso ela é chamada de "lista ligada"
pois os nós são amarrados com essa indicação de qual é o proximo nó.

Lista Duplamente Ligada

A lista duplamente ligadas constituem uma variação das lista ligadas.
A grande diferença das lista duplamente ligadas para listas ligadas
é que elas são bidirecionais. Vimos que naturalmente, não conseguimos
"andar para trás" em listas ligadas, pois os nós de uma lista ligada
sabem somente quem é o proximo elemento. Nas listas duplamente ligada,
os nós sabem quem é o proximo elemento e também quem é o elemento
anterior, o que permite a navegação reversa.

PILHAS.

Uma pilha é uma estrutura de dados que serve como uma coleção de elementos
e permite o acesso a somente a um item de dados armazenado

O acesso ao itens de uma pilha é restrito - somente um item pode ser
lido ou removido por vez

Tipos de Pilhas: LIFO ou UEPS // FIFO ou PEPS

LIFO ou UEPS: A estrutura do tipo Pilha LIFO (Last in First out)
ou UEPS(Ultimo que entra Primeiro que Sai), apresenta o seguinte criterio:
O primeiro elemento a ser retirado é o ultimo que tiver sido inserido.

FIFO ou PEPS: A estrutura do tipo PILHA FIFO (first in First Out) ou
PEPS(Primeiro que Entra Primeiro que Sai), apresenta o seguinte criterio:
O primeiro elemento a ser retirado é o primeiro que tiver sido inserido

FILAS.

A estrutura do tipo fila admite remoção de elementos e inserção de novos
sujeito a seguinte regra de operação:

O elemento removido é o que está na estrutura há mais tempo ou seja,
o primeiro objetivo inserido na fila é também o primeiro a ser removido
o seguindo conceito FIFO.

ARVORES.

É uma estrutura de dados que organiza seus elementos de forma hierarquica,
onde existe çum elemento que fica no topo da arvore, chamado raiz
e existe elementos subordinados a ele, que são chamados de nós ou folhas.

Esse tipo de estrutura facilita a buscas

TABELA HASH.

tabela de espalhamento

Uma tabela hash, de dispersão ou espalhamento é uma estrutura
de dados especial, que associa chave de pesquisa a valores.
a tabela hash é uma generalização da ideia array, porém
utiliza uma função denominada hashing para espalhar os elementos,
fazendo com que os mesmos fiquem de forma não ordenada dentreo do
"array" que define a tabela

A tabela hash permite a assossiação ded "valores" a "chaves"

Valores: é a posição ou indice onde o elemento se encontra

Chave: parte da informação que compoem o elemento a ser manipulado.

Espalhar facilita a busca dde dados, pois a partir de uma chave podemos
acessar de forma rapida uma posição do array.

GRAFOS.

Grafos são estruturas que permitem programar a relação entre objetos
Os objetos são vertices ou nós do grafo
Os relacionamentos são arestas 

USADO EM ALGORITMOS RELACIONADOS EM INTELIGENCIA ARTIFICIAL

PENSAMENTOS COMPUTACIONAL

VISAO GERAL 

PILARES DO PENSAMENTOS COMPUTACIONAL

ESTUDOS DE CASO

PENSAMENTOS COMPUTACIONAL
INTRODUÇÃO: Refere se ao processo de pensamento envolvido na expressao
de soluções em passos computacionais oou algoritmo que podem ser implementados
no computador

formulação e resolução de problemas 
Sistematico e eficiente

baseado em 4 pilares

Decomposição -> reconhecimento de padrões -> abstração -> design de algoritmos

Decomposição:
DIVIDIR UM PROBLEMA COMPLEXO EM SUBPROBLEMAS

Reconhecimento de Padrões:
identificar padroes ou tendencias
similaridades e diferença entre os problemas
padrão comportamental

Abstração:
Extrapolar o conceito do problema para uma forma generalista.

Design de Algoritmos
Automatiza, definir passo a passo a solução do problema.

Algoritmos consite de uma entrada, sequencia de operações, que vão gerar
a saida para solução.

Processo Continuo

* Definir uma solução
* Testar a solução
* Aperfeicoamento da solução encontrada

Teste -> Analisa - Refina

Abstração: Resolução de problemas
Automatização: Expressão de solução
Análise: Execução da solução e avalição

Variações dos Pilares
* Racicinio logico
* Refinamento

Racicinio logico -> Decomposição -> padroes -> 
abstração -> algoritmo -> refinamento

Competencias
* Pensamentos sistematicos
* colaboração dentro da equipe
* criatividade e design
* Facilitador

HABILIDADE COMPLEMENTARES:

Racicinio logico é uma forma de pensamento estruturado, ou racionio,
que permite encontrar a conclusão ou determinar a resolução de um
problema.

* habilidade de treinamento

Classificação
- indução - fenome observado - ciencias experimentais

- dedução - previsoes e explicações - ciencias exatas  

- abdução - premissa - conclusao

Aperfeicoamento:

melhoramento - ato de apefeiçoar - aprimoramento

apartir de uma solução, determinar pontos de melhoras e refinamento

* encontrar solução eficiente
* otimizar processos
* simplificar linhas de codigos
* função bem definidas
* processo continuo
* presente em todas as etapas
* maior compreensão
* mais eficiente


Decomposição: 
Primeiro passo da resolução de problemas dentro do conceito de 
pensamento computacional

"Dado um problema complexo, devemos quebra-lo em problemas menores.
Portanto, problemas mais faceis e gerenciaveis."

Estrategia

Processo de quebrar e determinar partes menores e gerenciaveis



Decomposição 

Estrategia > 

Primeira parte é Análise >
Processo de quebra e determinar partes menores e gerenciaveis
Estudar,explorar > decompor em elementos constituintes > "Realizar exames detalhados"

Segunda fase é a sintase > 
combinar os elementos recompondo o problema original
Processos de reconstrução > consiste em reunir elementos em um unico elemento > fundir elementos de maneira coerente

As Ordem de execução de tarefas menores pode ser:
*Sequencial > dependencia entre tarefas executadas em "FILA"

*Paralelo  > tarefas podem ser executada concomitante.

Não basta aplicar

Desenvolver a decomposição "by youself"

Como decompor?

Entenda o problema 

Identificar ou coletar dados > agregar os dados > funcionalidade > DECOMPOSIÇÃO

EXEMPLOS:

COZINHAR

- IDENTIFICAR OS INGREDIENTES
- DETERMINAR AS ESTAPADAS (SEQUENCIAL OU PARALELO)
- EXECUTAR CADA ETAPA
- AGREGAR OS INGREDIENTES PARA FINALIZAR (RECOMPOR COM COERENCIA)



Reconhecimento de padroes

*modelo base
*estrutura invariante
*repetição


similaridades e diferenças

ex: fotos de redes sociais
tem metadata

compreensão

salvar no servidor de dados

Porque determinar padroes ?

forma de generelizar, com objetivo de obter resolução para problema difentes

Classificação de objetos 

Classes e categorias > depende do dominio e tipo de media

Como que o computador reconhece padroes

Com ser humano
*Grau de similaridades
*Grupoos conhecidos x objetos desconhecidos

Isso se da por Comparação.

Como simular esse compotameto para o computador?
* Representações de atributos
* Aprendizado - conceito associado ao objetos
* Armazenar dados
* Regras de Decisão

Abstração

Generilazação e abstração

abstrair > observa, um ou mais elementos. Avaliando caracteristicas e propriedades em separado.

abstração > Processo intelectual de isolamento de um objeto da realidade.

Generalizar > Tornar geral, mais amplos, extensões.

Generalização // Abstração

Generalização, na LOGICA, é uma operação intelectual que consiste em reunir numa classe geral, um conjunto de seres ou fenomenos similares.

Abstração, Como classificar os dados?

* Caracteristica
* Pontos essenciais
* Generalizar x detalhar

com isso conneguimos a Representações

Representações de dados

Caracteristica se dividi em duas partes

Pontos essencias e detalhes

Para realizar um determinada aplicações focamos nos pontos essenciais isso é abstração.

Conceitos baseado em abstrações

listas
arvore
grafos
linguagem de programação
Redes a parte de comunicação/comunicação sincrona /
Arquitetura paralela
Arquiteturas sejem em servidor / em camadas / formato de estrelas / de ponto a ponto.

ALGORITMOS

o PRINCIPAL pilar 

Computador
- Energia
- Trabalhador
- Eficiente
- Rapidez

Não opera sozinho

Precisa de detalhes nas sua instruções

Processo de resolução de problema "step by setp" utilizando instruções

As instruções vão dizer o que precisa ser feito e qual a ordem dessa execusões.

E precisa ser entendido pelo Humano e pela Maquina (computador)

Desennvolvimento do programar

* Analise     >   Estudo e definição dos dados de entrada e saida
* Algoritmo   >   Descreve o problema por meio de ferrramentas narrativas
* Codificação >   O algoritmo é codificado dee acordo com a linguagem de de programação escolhida 

ALGORITMOS é:

Sequencia de passos com objetivo definido

Execução de tarefa especificas

Cojuntos de operações que resultam em uma sucessão de finita de ações

Como construir um algoritmo?

- compreensão do problema
- definição dados de entrada
- definir processametos
- definir dados de saida
- utilizar um metedo de construção 
- teste e diagnostico (refinamento)

construçao de algoritmo

Narrativa    - utilizar linguagem natural
Fluxograma   - utilização de simbolos pré - definidos
Pseudocodigo - Portugol - regras definidas -  passos a serem seguidos.